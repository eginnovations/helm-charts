apiVersion: apps/v1
kind: "DaemonSet"
metadata:
  name: {{ include "egagent.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app }}
    {{- include "egagent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app }}
      {{- include "egagent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.app }}
        {{- include "egagent.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.monitorMasterNodes.enabled }}
      tolerations:
      # this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can't run pods
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      {{- end }} 
      volumes:
      - name: var-run
        hostPath:
          path: /var/run
      - name: process
        hostPath:
          path: /proc
      - name: host-root
        hostPath:
          path: /
      {{- if .Values.btmHostMount.create }}
      - name: btmmount
        hostPath: 
          path: /opt/egbtm
          type: DirectoryOrCreate
      {{- end }}    
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecrets }}"
      {{- if .Values.nodeSelector.enabled }}
      nodeSelector:
        {{ .Values.nodeSelector.selectorLabelName}}
      {{- end }}        
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: {{ .Values.securityContext.previleged }}
        env:
        - name: EG_MANAGER
          value: "{{ .Values.env.EG_MANAGER }}"
        - name: EG_MANAGER_PORT
          value: "{{ .Values.env.EG_MANAGER_PORT}}"
        - name: EG_MANAGER_SSL
          value: "{{ .Values.env.EG_MANAGER_SSL }}"
        - name: JVM_MEMORY
          value: "{{ .Values.env.JVM_MEMORY }}"
        - name: EG_AGENT_IDENTIFIER_ID
          value: "{{ .Values.env.EG_AGENT_IDENTIFIER_ID }}"
        - name: DEBUG
          value: "{{ .Values.env.DEBUG }}"
        - name: NAMESPACES_TO_INCLUDE
          value: "{{ .Values.env.NAMESPACES_TO_INCLUDE }}"          
        - name: NAMESPACES_TO_EXCLUDE
          value: "{{ .Values.env.NAMESPACES_TO_EXCLUDE }}"              
        - name: EG_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: {{ .Values.env.EG_HOST_IP }}
        volumeMounts:
        - name: var-run
          mountPath: /var/run
        - name: process
          mountPath: /media/proc
        - name: host-root
          mountPath: /mnt
        {{- if .Values.btmHostMount.create }}          
        - name: btmmount
          mountPath: /opt/egbtm
        {{- end }}
      hostIPC: {{ .Values.hostIPC }}
      hostNetwork: {{ .Values.hostNetwork }}
      hostPID: {{ .Values.hostPID }}
      serviceAccountName: {{ .Values.serviceAccountName }}
